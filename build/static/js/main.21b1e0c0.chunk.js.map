{"version":3,"sources":["components/alert/Alert.component.jsx","components/HOCs/PrivateRoute.jsx","redux/alert/alert.actions.js","redux/alert/alert.types.js","redux/auth/auth.actions.js","redux/auth/auth.types.js","components/navbar/Navbar.component.jsx","components/button/Button.component.jsx","pages/landing/Landing.component.jsx","utils/form-validation/useAuthForm.js","utils/form-validation/validateForm.js","pages/login/Login.component.jsx","pages/register/Register.component.jsx","pages/settings/Settings.component.jsx","utils/form-validation/useTaskForm.js","utils/formatStringToDate.js","redux/tasks/tasks.actions.js","redux/tasks/tasks.types.js","components/task-list-components/task-form/TaskForm.component.jsx","components/dialogs/task-dialog/TaskDialog.component.jsx","components/dialogs/confirm-action-dialog/ConfirmActionDialog.component.jsx","components/task-list-components/task-item/TaskItem.component.jsx","components/task-list-components/task-list-menu/TaskListMenu.component.jsx","pages/task-list/TaskList.component.jsx","utils/setAuthToken.js","redux/tasks/tasks.reducer.js","redux/auth/auth.reducer.js","redux/alert/alert.reducer.js","redux/rootReducer.js","redux/store.js","App.jsx","serviceWorker.js","index.jsx"],"names":["connect","state","alerts","alert","length","map","key","id","className","alertType","msg","auth","Component","component","isAuthenticated","loading","otherProps","render","props","to","setAlert","timeout","dispatch","v4","type","payload","setTimeout","loadUser","a","axios","get","res","data","withRouter","logoutUser","history","exact","Fragment","onClick","push","Button","style","children","user","Helmet","charSet","src","alt","fontWeight","name","fontSize","marginTop","backgroundColor","useAuthForm","validationSuccessHandler","validateForm","operation","useState","email","password","password2","formData","setFormData","errors","setErrors","submitted","setSubmitted","useEffect","handleChange","e","target","value","handleSubmit","preventDefault","test","taskName","dueDate","loginUser","config","headers","body","JSON","stringify","post","response","forEach","error","noValidate","onSubmit","placeholder","onChange","minLength","size","registerUser","autoComplete","required","initialValues","notes","formatStringToDate","dateString","dateArray","split","Date","fetchTasks","sortBy","tasks","allTasks","createTask","importance","dbDate","console","log","updateTask","taskId","put","closeDialog","taskData","filter","_id","importanceOptions","option","color","initialImportance","find","selectedImportance","setSelectedImportance","moment","format","isSubmitting","setIsSubmitting","useTaskForm","cursor","margin","TaskDialog","open","setOpen","Dialog","onClose","aria-labelledby","DialogActions","DialogContent","ConfirmActionDialog","confirmedAction","handleClose","deleteTask","delete","parseInt","localStorage","getItem","selectedSortIndex","setSelectedSortIndex","setItem","toString","translatedSortBy","index","loadingTasks","setAuthToken","token","defaults","common","removeItem","initialState","rootReducer","combineReducers","action","task","middlewares","thunk","store","createStore","composeWithDevTools","applyMiddleware","currentState","subscribe","previousState","getState","baseURL","App","path","Landing","Login","Register","Settings","TaskList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.21b1e0c0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Alert.styles.scss\";\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts !== null &&\r\n  alerts.length > 0 &&\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n\r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  alerts: state.alert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...otherProps\r\n}) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to=\"/login\" />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { v4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './alert.types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 4000) => dispatch => {\r\n  const id = v4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id }\r\n  });\r\n\r\n  setTimeout(() => {\r\n    dispatch({\r\n      type: REMOVE_ALERT,\r\n      payload: id\r\n    });\r\n  }, timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import axios from \"axios\";\r\nimport {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from \"./auth.types\";\r\nimport { setAlert } from \"../alert/alert.actions\";\r\n\r\n// load user\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/auth\");\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n// register user\r\nexport const registerUser = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/user\", body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// login user\r\nexport const loginUser = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/auth\", body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout user\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","// icons\r\nimport DoubleArrowRoundedIcon from \"@material-ui/icons/DoubleArrowRounded\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport SettingsRoundedIcon from \"@material-ui/icons/SettingsRounded\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { setAlert } from \"../../redux/alert/alert.actions\";\r\nimport { logoutUser } from \"../../redux/auth/auth.actions\";\r\nimport \"./Navbar.styles.scss\";\r\n\r\nconst Navbar = ({\r\n  auth: { isAuthenticated, loading },\r\n  logoutUser,\r\n  setAlert,\r\n  history,\r\n}) => {\r\n  const handleLogout = () => {\r\n    logoutUser();\r\n    setAlert(\"Du wurdest ausgeloggt\", \"success\");\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"logo \">\r\n          <span className=\"nav-link \">\r\n            <span className=\"link-text logo-text\">TaskApp</span>\r\n            <DoubleArrowRoundedIcon className=\"nav-toggler\" />\r\n          </span>\r\n        </li>\r\n\r\n        <li className=\"nav-item\">\r\n          <NavLink exact to=\"/\" className=\"nav-link\">\r\n            <HomeRoundedIcon className=\"nav-icon\" />\r\n            <span className=\"link-text\">Home</span>\r\n          </NavLink>\r\n        </li>\r\n\r\n        {isAuthenticated && !loading ? (\r\n          <React.Fragment>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/tasks\" className=\"nav-link\">\r\n                <FormatListBulletedIcon className=\"nav-icon\" />\r\n                <span className=\"link-text\">Aufgaben</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item \">\r\n              <NavLink to=\"/settings\" className=\"nav-link \">\r\n                <SettingsRoundedIcon className=\"nav-icon\" />\r\n                <span className=\"link-text\">Einstellungen</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item logout\">\r\n              <span className=\"nav-link \" onClick={handleLogout}>\r\n                <ExitToAppIcon className=\"nav-icon\" />\r\n                <span className=\"link-text\">Ausloggen</span>\r\n              </span>\r\n            </li>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/login\" className=\"nav-link\">\r\n                <ExitToAppIcon className=\"nav-icon\" />\r\n                <span className=\"link-text\">Einloggen</span>\r\n              </NavLink>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <NavLink to=\"/register\" className=\"nav-link\">\r\n                <PersonAddIcon className=\"nav-icon\" />\r\n                <span className=\"link-text\">Registrieren</span>\r\n              </NavLink>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, { logoutUser, setAlert })(Navbar)\r\n);\r\n","import React from 'react';\r\nimport './Button.styles.scss';\r\n\r\nconst Button = ({ style, onClick, children, type }) => {\r\n  return (\r\n    <button className=\"button\" style={{ ...style }} onClick={onClick} type={type}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../components/button/Button.component\";\r\nimport \"./Landing.styles.scss\";\r\n\r\nconst Landing = ({ history, auth: { isAuthenticated, user } }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home | TaskApp </title>\r\n      </Helmet>\r\n      <div className=\"landing\">\r\n        <div className=\"landing-logo\">\r\n          <img src=\"logo.png\" alt=\"Logo\" />\r\n          <span className=\"landing-logo-text\">TaskApp</span>\r\n        </div>\r\n\r\n        {isAuthenticated ? (\r\n          <div className=\"landing-info\">\r\n            <h4 style={{ fontWeight: \"350\" }}>\r\n              {user && `Willkommen zurück, ${user.name}!`}\r\n            </h4>\r\n\r\n            <br />\r\n            <p style={{ fontSize: \"1.1rem\", fontWeight: \"350\" }}>\r\n              Sieh nach was noch zu erledigen ist und erstelle neue Aufgaben.\r\n            </p>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => history.push(\"/tasks\")}\r\n              style={{ marginTop: \"2rem\", backgroundColor: \"#0bbbda\" }}\r\n            >\r\n              Meine Aufgaben\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"landing-info\">\r\n            Dies ist ein Aufgaben-Manager, welcher lediglich als\r\n            Portfolioprojekt dient. <br /> Es kann keine Datensicherheit\r\n            garantiert werden. <br />\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => history.push(\"/login\")}\r\n              style={{ marginTop: \"2rem\", backgroundColor: \"#0bbbda\" }}\r\n            >\r\n              Zum Login\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        {/* <p className=\"py-4\">\r\n          - Allgemeine Produktivitäts-Tipps <br /> - Erklärung des Konzepts von\r\n          Semoto\r\n        </p> */}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => ({\r\n  auth,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useAuthForm = (\r\n  validationSuccessHandler,\r\n  validateForm,\r\n  operation\r\n) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validateForm(formData));\r\n    setSubmitted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (operation === \"register\") {\r\n      if (\r\n        !errors.email &&\r\n        !errors.password &&\r\n        !errors.name &&\r\n        !errors.password2 &&\r\n        submitted\r\n      ) {\r\n        validationSuccessHandler(); // this will register the user\r\n      }\r\n    }\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    if (operation === \"login\") {\r\n      if (!errors.email && !errors.password && submitted) {\r\n        validationSuccessHandler(); // this will try to log in the user\r\n      }\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    formData,\r\n    errors,\r\n    submitted,\r\n  };\r\n};\r\n","export const validateForm = (data) => {\r\n  let errors = {};\r\n\r\n  // username\r\n  if (!data.name) {\r\n    errors.name = \"Ein Benutzername ist erforderlich\";\r\n  } else if (data.name.length < 2) {\r\n    errors.name = \"Der Benutzername muss mindestens zwei Zeichen enthalten\";\r\n  }\r\n\r\n  //email\r\n  if (!data.email) {\r\n    errors.email = \"Eine Email Adresse ist erforderlich\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(data.email)) {\r\n    errors.email = \"Die Email Adresse muss gültig sein\";\r\n  }\r\n\r\n  // passwort 1\r\n  if (!data.password) {\r\n    errors.password = \"Ein Passwort  ist erforderlich\";\r\n  } else if (data.password.length < 6) {\r\n    errors.password = \"Das Passwort muss min. sechs Zeichen enthalten\";\r\n  }\r\n  // passwort 2\r\n  if (data.password !== data.password2) {\r\n    errors.password2 = \"Die Passwörter stimmen nicht überein\";\r\n  }\r\n\r\n  //Aufgabentitel\r\n  if (!data.taskName) {\r\n    errors.taskName = \"Ein Aufgabentitel ist erforderlich\";\r\n  }\r\n  if (!data.dueDate) {\r\n    errors.dueDate = \"Sie müssen ein Fälligkeitsdatum angeben\";\r\n  } else if (\r\n    !/^\\s*(3[01]|[12][0-9]|0?[1-9])\\.(1[012]|0?[1-9])\\.((?:19|20)\\d{2})\\s*$/g.test(\r\n      data.dueDate\r\n    )\r\n  ) {\r\n    errors.dueDate = \"Sie müssen ein gültiges Fälligkeitsdatum angeben\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport Button from \"../../components/button/Button.component\";\r\nimport { loginUser } from \"../../redux/auth/auth.actions\";\r\nimport \"../../styles/auth-form.scss\";\r\nimport { useAuthForm } from \"../../utils/form-validation/useAuthForm\";\r\nimport { validateForm } from \"../../utils/form-validation/validateForm\";\r\n\r\nconst Login = ({ loginUser, isAuthenticated }) => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const validationSuccess = () => {\r\n    loginUser(email, password);\r\n    setSubmitted(true);\r\n    setTimeout(() => {\r\n      setSubmitted(false);\r\n    }, 5000);\r\n  };\r\n  const { handleChange, handleSubmit, formData, errors } = useAuthForm(\r\n    validationSuccess,\r\n    validateForm,\r\n    \"login\"\r\n  );\r\n  const { email, password } = formData;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Einloggen | TaskApp </title>\r\n      </Helmet>\r\n\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"auth-form pt-5\">\r\n          <h3 className=\"mb-3\">Einloggen</h3>\r\n          <p className=\"pb-2\">Hier kannst du dich Anmelden</p>\r\n\r\n          <form noValidate className=\"form\" onSubmit={(e) => handleSubmit(e)}>\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"email\"\r\n                placeholder=\"Email Adresse\"\r\n                name=\"email\"\r\n                onChange={(e) => handleChange(e)}\r\n                value={email}\r\n              />\r\n              <span className=\"error-text\">{errors?.email}</span>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                placeholder=\"Passwort\"\r\n                name=\"password\"\r\n                minLength={6}\r\n                onChange={(e) => handleChange(e)}\r\n                value={password}\r\n              />\r\n              <span className=\"error-text\">\r\n                {errors.password && \"Ihr Passwort ist min. sechs Zeichen lang\"}\r\n              </span>\r\n            </div>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ marginTop: \"2rem\", backgroundColor: \"#0bbbda\" }}\r\n            >\r\n              {submitted ? (\r\n                <MoonLoader size={20} loading={submitted} />\r\n              ) : (\r\n                \"Einloggen\"\r\n              )}\r\n            </Button>\r\n          </form>\r\n          <p className=\"my-3 form-redirect\">\r\n            Du hast noch keinen Account?{\" \"}\r\n            <Link to=\"/register\">Registrieren</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth: { isAuthenticated } }) => ({\r\n  isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n//redux\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport Button from \"../../components/button/Button.component\";\r\nimport { registerUser } from \"../../redux/auth/auth.actions\";\r\nimport \"../../styles/auth-form.scss\";\r\nimport { useAuthForm } from \"../../utils/form-validation/useAuthForm\";\r\nimport { validateForm } from \"../../utils/form-validation/validateForm\";\r\n\r\nconst Register = ({ registerUser, isAuthenticated }) => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const validationSuccess = () => {\r\n    registerUser({ name, email, password });\r\n    setSubmitted(true);\r\n    setTimeout(() => {\r\n      setSubmitted(false);\r\n    }, 5000);\r\n  };\r\n  const { handleChange, handleSubmit, formData, errors } = useAuthForm(\r\n    validationSuccess,\r\n    validateForm,\r\n    \"register\"\r\n  );\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/tasks\" />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Registrieren | TaskApp </title>\r\n      </Helmet>\r\n      <div className=\"form-wrapper\">\r\n        <div className=\"auth-form pt-5\">\r\n          <h3 className=\"mb-3\">Registrieren</h3>\r\n          <p className=\"pb-2\">Hier kannst du deinen Account erstellen</p>\r\n\r\n          <form\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            className=\"form\"\r\n            onSubmit={(e) => handleSubmit(e)}\r\n          >\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                required\r\n                minLength={3}\r\n                onChange={(e) => handleChange(e)}\r\n                value={name}\r\n                autoComplete=\"off\"\r\n              />\r\n              <span className=\"error-text\">{errors.name}</span>\r\n            </div>\r\n\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"email\"\r\n                placeholder=\"Email Adresse\"\r\n                name=\"email\"\r\n                onChange={(e) => handleChange(e)}\r\n                value={email}\r\n                autoComplete=\"off\"\r\n              />\r\n              <span className=\"error-text\">{errors.email}</span>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                placeholder=\"Passwort\"\r\n                name=\"password\"\r\n                minLength={6}\r\n                onChange={(e) => handleChange(e)}\r\n                value={password}\r\n              />\r\n              <span className=\"error-text\">{errors.password}</span>\r\n            </div>\r\n            <div className=\"input-wrapper\">\r\n              <input\r\n                className=\"input\"\r\n                type=\"password\"\r\n                placeholder=\"Passwort bestätigen\"\r\n                name=\"password2\"\r\n                minLength={6}\r\n                onChange={(e) => handleChange(e)}\r\n                value={password2}\r\n              />\r\n              <span className=\"error-text\">{errors.password2}</span>\r\n            </div>\r\n            <Button\r\n              type=\"submit\"\r\n              style={{ marginTop: \"2rem\", backgroundColor: \"#0bbbda\" }}\r\n            >\r\n              {submitted ? (\r\n                <MoonLoader size={20} loading={submitted} />\r\n              ) : (\r\n                \"Registrieren\"\r\n              )}\r\n            </Button>\r\n          </form>\r\n\r\n          <p className=\"my-3 form-redirect\">\r\n            Du hast bereits einen Account? <Link to=\"/login\">Einloggen</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth: { isAuthenticated } }) => ({\r\n  isAuthenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { registerUser })(Register);\r\n","//icons\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Settings.styles.scss\";\r\n\r\nconst Profile = ({ user }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Einstellungen | TaskApp </title>\r\n      </Helmet>\r\n      <div className=\"settings-wrapper\">\r\n        <div className=\"settings\">\r\n          <h2>Einstellungen</h2>\r\n          {/* <p>Du kannst deine Daten jederzeit ändern</p> */}\r\n          <hr className=\"line\" />\r\n          <div className=\"settings-content\">\r\n            <div className=\"settings-categories\">\r\n              <span>Name</span>\r\n              <span>Email</span>\r\n              <span>Passwort</span>\r\n            </div>\r\n            <div className=\"settings-values\">\r\n              <span className=\"name\">{user?.name}</span>\r\n              <span className=\"email\">{user?.email}</span>\r\n              <span className=\"password\">********</span>\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"settings-actions\">\r\n            <span className=\"edit-user\">\r\n              <EditIcon />\r\n            </span>\r\n            <span className=\"delete-user\">\r\n              <DeleteIcon />\r\n            </span>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\nconst mapStateToProps = ({ auth: { user } }) => ({\r\n  user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Profile);\r\n","import { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst initialValues = {\r\n  taskName: '',\r\n  notes: '',\r\n  dueDate: ''\r\n};\r\n\r\nexport const useTaskForm = (\r\n  validationSuccessHandler,\r\n  validateForm,\r\n  taskData = initialValues\r\n) => {\r\n  const [formData, setFormData] = useState({\r\n    ...taskData,\r\n    dueDate: taskData.dueDate\r\n      ? moment(taskData.dueDate).format('DD.MM.YYYY')\r\n      : ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = e => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setErrors(validateForm(formData));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!errors.taskName && !errors.notes && !errors.dueDate && isSubmitting) {\r\n      validationSuccessHandler();\r\n    }\r\n  }, [errors]);\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    formData,\r\n    errors\r\n  };\r\n};\r\n","export const formatStringToDate = dateString => {\r\n  const dateArray = dateString.split('.');\r\n  const formattedDate = new Date(\r\n    +dateArray[2],\r\n    dateArray[1] - 1,\r\n    +dateArray[0]\r\n  );\r\n  return formattedDate;\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TASKS,\r\n  TASK_ERROR,\r\n  CREATE_TASK,\r\n  UPDATE_TASK,\r\n  DELETE_TASK,\r\n} from \"./tasks.types\";\r\nimport { setAlert } from \"../alert/alert.actions\";\r\nimport { formatStringToDate } from \"../../utils/formatStringToDate\";\r\n\r\nexport const createTask = (taskName, dueDate, importance, notes = \"\") => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const dbDate = formatStringToDate(dueDate);\r\n  console.log(dbDate);\r\n\r\n  const body = JSON.stringify({ taskName, dueDate: dbDate, importance, notes });\r\n\r\n  try {\r\n    const res = await axios.post(\"/api/tasks\", body, config);\r\n\r\n    dispatch({\r\n      type: CREATE_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: TASK_ERROR });\r\n    dispatch(setAlert(\"Etwas ist schief gelaufen\", \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteTask = (taskId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/tasks/${taskId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_TASK,\r\n      payload: taskId,\r\n    });\r\n  } catch (error) {\r\n    dispatch({ type: TASK_ERROR });\r\n    dispatch(setAlert(\"Etwas ist schief gelaufen\", \"danger\"));\r\n  }\r\n};\r\n\r\nexport const updateTask = (taskId, dueDate, importance, notes = \"\") => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const dbDate = formatStringToDate(dueDate);\r\n  const body = JSON.stringify({ dueDate: dbDate, importance, notes });\r\n\r\n  try {\r\n    const res = await axios.put(`/api/tasks/${taskId}`, body, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: TASK_ERROR });\r\n    dispatch(setAlert(\"Etwas ist schief gelaufen\", \"danger\"));\r\n  }\r\n};\r\n\r\nexport const fetchTasks = (sortBy) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/tasks/${sortBy}`);\r\n\r\n    dispatch({\r\n      type: GET_TASKS,\r\n      payload: res.data.tasks,\r\n    });\r\n  } catch (err) {\r\n    dispatch({ type: TASK_ERROR });\r\n    dispatch(setAlert(\"Etwas ist schief gelaufen\", \"danger\"));\r\n  }\r\n};\r\n","export const GET_TASKS = 'GET_TASKS';\r\nexport const CREATE_TASK = 'CREATE_TASK';\r\nexport const UPDATE_TASK = 'UPDATE_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const TASK_ERROR = 'TASK_ERROR';\r\nexport const SORT_TASKS = 'SORT_TASKS';\r\n","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport './TaskForm.styles.scss';\r\n\r\nimport { useTaskForm } from '../../../utils/form-validation/useTaskForm';\r\nimport { validateForm } from '../../../utils/form-validation/validateForm';\r\n\r\nimport Button from '../../button/Button.component';\r\nimport SwapVertRoundedIcon from '@material-ui/icons/SwapVertRounded';\r\n\r\n//redux\r\nimport { connect } from 'react-redux';\r\nimport { createTask, updateTask } from '../../../redux/tasks/tasks.actions';\r\n\r\nconst TaskForm = ({ closeDialog, type, createTask, updateTask, tasks, id }) => {\r\n  const validationSuccessHandler = () => {\r\n    if (type === 'create') {\r\n      createTask(taskName, dueDate, selectedImportance.option, notes);\r\n    } else {\r\n      updateTask(id, dueDate, selectedImportance.option, notes);\r\n    }\r\n    closeDialog();\r\n  };\r\n\r\n  // taskdata to be prefilled when editing the task\r\n  let taskData = tasks.filter(({ _id }) => _id === id)[0];\r\n\r\n  // only relevant for importance selection\r\n  const importanceOptions = [\r\n    { option: 'Niedrig', color: 'lightgrey' },\r\n    { option: 'Mittel', color: 'orange' },\r\n    { option: 'Hoch', color: 'red' }\r\n  ];\r\n\r\n  const initialImportance = taskData\r\n    ? importanceOptions.find(({ option }) => option === taskData.importance)\r\n    : importanceOptions[1];\r\n\r\n  const [selectedImportance, setSelectedImportance] = useState(\r\n    initialImportance\r\n  );\r\n  const handleImportanceSwap = () => {\r\n    if (selectedImportance.option === importanceOptions[0].option)\r\n      setSelectedImportance(importanceOptions[1]);\r\n    else if (selectedImportance.option === importanceOptions[1].option)\r\n      setSelectedImportance(importanceOptions[2]);\r\n    else setSelectedImportance(importanceOptions[0]);\r\n  };\r\n\r\n  const { handleChange, handleSubmit, formData, errors } = useTaskForm(\r\n    validationSuccessHandler,\r\n    validateForm,\r\n    taskData\r\n  );\r\n  const { taskName, notes, dueDate } = formData;\r\n\r\n  return (\r\n    <div className=\"task-form\">\r\n      <form\r\n        noValidate\r\n        autoComplete=\"off\"\r\n        className=\"form\"\r\n        onSubmit={e => handleSubmit(e)}\r\n      >\r\n        {type === 'create' && (\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              className=\"input\"\r\n              type=\"text\"\r\n              placeholder=\"Aufgabentitel\"\r\n              name=\"taskName\"\r\n              onChange={e => handleChange(e)}\r\n              value={taskName}\r\n            />\r\n            <span className=\"error-text\">\r\n              {errors.taskName ? errors.taskName : ''}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"text-area-wrapper\">\r\n          <textarea\r\n            onChange={e => handleChange(e)}\r\n            value={notes}\r\n            name=\"notes\"\r\n            placeholder=\" Notizen (optional)\"\r\n          ></textarea>\r\n          <span className=\"error-text\">{errors.notes ? errors.notes : ''}</span>\r\n        </div>\r\n\r\n        <div className=\"input-wrapper\">\r\n          <p>\r\n            Wichtigkeit:&nbsp;\r\n            <span style={{ color: `${selectedImportance.color}` }}>\r\n              {selectedImportance.option}\r\n            </span>\r\n            <SwapVertRoundedIcon\r\n              onClick={handleImportanceSwap}\r\n              style={{ cursor: 'pointer' }}\r\n            />\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            value={dueDate}\r\n            onChange={e => handleChange(e)}\r\n            name=\"dueDate\"\r\n            className=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Zu erledigen bis: (TT.MM.JJJJ)\"\r\n          />\r\n          <span className=\"error-text\">\r\n            {errors.dueDate ? errors.dueDate : ''}\r\n          </span>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          style={{ backgroundColor: '#0bbbda', margin: '2rem auto' }}\r\n        >\r\n          {type === 'create' ? 'Erstellen' : 'Bestätigen'}\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ tasks: { allTasks } }) => ({\r\n  tasks: allTasks\r\n});\r\n\r\nexport default connect(mapStateToProps, { createTask, updateTask })(TaskForm);\r\n","import React, { useState } from 'react';\r\nimport './TaskDialog.styles.scss';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditRoundedIcon from '@material-ui/icons/EditRounded';\r\n\r\nimport TaskForm from '../../task-list-components/task-form/TaskForm.component';\r\n\r\nconst TaskDialog = ({ type, taskName, id }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  if (type === 'newTask') {\r\n    return (\r\n      <React.Fragment>\r\n        <span onClick={() => setOpen(true)}>\r\n          Neu&nbsp; <AddIcon />\r\n        </span>\r\n        <Dialog\r\n          className=\"task-dialog\"\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          aria-labelledby=\"task-dialog-title\"\r\n        >\r\n          <DialogActions>\r\n            <span className=\"task-dialog-close\" onClick={() => setOpen(false)}>\r\n              X\r\n            </span>\r\n          </DialogActions>\r\n          <DialogContent>\r\n            <h4 className=\"task-dialog-header\">Neue Aufgabe erstellen</h4>\r\n            <TaskForm closeDialog={() => setOpen(false)} type=\"create\" />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  } else if (type === 'editTask') {\r\n    return (\r\n      <React.Fragment>\r\n        <span onClick={() => setOpen(true)}>\r\n          <EditRoundedIcon />\r\n        </span>\r\n        <Dialog\r\n          className=\"task-dialog\"\r\n          open={open}\r\n          onClose={() => setOpen(false)}\r\n          aria-labelledby=\"task-dialog-title\"\r\n        >\r\n          <DialogActions>\r\n            <span className=\"task-dialog-close\" onClick={() => setOpen(false)}>\r\n              X\r\n            </span>\r\n          </DialogActions>\r\n          <DialogContent>\r\n            <h4 className=\"task-dialog-header\">\"{taskName}\" bearbeiten</h4>\r\n            <TaskForm\r\n              closeDialog={() => setOpen(false)}\r\n              type=\"edit\"\r\n              taskName={taskName}\r\n              id={id}\r\n            />\r\n          </DialogContent>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default TaskDialog;\r\n","import React, { useState } from 'react';\r\nimport './ConfirmActionDialog.styles.scss';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nimport CheckRoundedIcon from '@material-ui/icons/CheckRounded';\r\n\r\nconst ConfirmActionDialog = ({ taskName, confirmedAction }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <span onClick={handleClickOpen}>\r\n        <CheckRoundedIcon />\r\n      </span>\r\n      <Dialog\r\n        className=\"confirm-action-dialog\"\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"confirm-action-dialog\"\r\n      >\r\n        <DialogContent>\r\n          <h4 className=\"confirm-action-dialog-heading\">\r\n            \"{taskName}\" als erledigt markieren?\r\n          </h4>\r\n          <div className=\"confirm-action-dialog-icons\">\r\n            <CheckRoundedIcon\r\n              onClick={() => confirmedAction()}\r\n              className=\"confirm-action-dialog-icon-done\"\r\n            />\r\n            <CancelIcon\r\n              onClick={handleClose}\r\n              className=\"confirm-action-dialog-icon-cancel\"\r\n            />\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ConfirmActionDialog;\r\n","import React from \"react\";\r\nimport \"./TaskItem.styles.scss\";\r\nimport moment from \"moment\";\r\n\r\n// icons\r\nimport PriorityHighRoundedIcon from \"@material-ui/icons/PriorityHighRounded\";\r\n\r\nimport TaskDialog from \"../../dialogs/task-dialog/TaskDialog.component\";\r\nimport ConfirmActionDialog from \"../../dialogs/confirm-action-dialog/ConfirmActionDialog.component\";\r\nimport { deleteTask } from \"../../../redux/tasks/tasks.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TaskItem = ({ taskName, importance, notes, dueDate, id, deleteTask }) => {\r\n  let color = \"\";\r\n  if (importance === \"Hoch\") color = \"red\";\r\n  if (importance === \"Mittel\") color = \"orange\";\r\n\r\n  return (\r\n    <div className=\"task-item\">\r\n      <div className=\"task-header\">\r\n        <h4 className=\"task-heading\">{taskName}</h4>\r\n        {color && <PriorityHighRoundedIcon style={{ color: `${color}` }} />}\r\n      </div>\r\n\r\n      <React.Fragment>\r\n        <div className=\"task-body\">\r\n          <p className=\"importance\">{notes}</p>\r\n        </div>\r\n        <div className=\"task-footer\">\r\n          {\r\n            <span className=\"due-date\">\r\n              bis zum {moment(dueDate).format(\"DD.MM.YYYY\")}\r\n            </span>\r\n          }\r\n          <div className=\"task-controls\">\r\n            <span className=\"task-edit\">\r\n              <TaskDialog type=\"editTask\" taskName={taskName} id={id} />\r\n            </span>\r\n            <span className=\"task-done\">\r\n              <ConfirmActionDialog\r\n                confirmedAction={() => deleteTask(id)}\r\n                taskName={taskName}\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(null, { deleteTask })(TaskItem);\r\n","import SortIcon from \"@material-ui/icons/Sort\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { fetchTasks } from \"../../../redux/tasks/tasks.actions\";\r\nimport TaskDialog from \"../../dialogs/task-dialog/TaskDialog.component\";\r\nimport \"./TaskListMenu.styles.scss\";\r\n\r\nconst TaskListMenu = ({ fetchTasks, auth }) => {\r\n  const sortBy = [\"createdAt\", \"dueDate\"];\r\n  const [selectedSortIndex, setSelectedSortIndex] = useState(\r\n    parseInt(localStorage.getItem(\"selectedSortIndex\")) || 0\r\n  );\r\n\r\n  const changeSortMethod = (index) => {\r\n    if (index === 1) {\r\n      setSelectedSortIndex(0);\r\n    } else {\r\n      setSelectedSortIndex(index + 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"selectedSortIndex\", selectedSortIndex.toString());\r\n  }, [selectedSortIndex]);\r\n\r\n  useEffect(() => {\r\n    if (!auth.loading) fetchTasks(sortBy[selectedSortIndex]);\r\n  }, [selectedSortIndex, auth.loading]);\r\n\r\n  // translate sortBy Array options to german\r\n  let translatedSortBy = \"\";\r\n  if (sortBy[selectedSortIndex] === \"createdAt\")\r\n    translatedSortBy = \"Erstellungsdatum\";\r\n  else if (sortBy[selectedSortIndex] === \"dueDate\")\r\n    translatedSortBy = \"Fälligkeitsdatum\";\r\n  if (sortBy[selectedSortIndex] === \"importance\")\r\n    translatedSortBy = \"Wichtigkeit\";\r\n\r\n  return (\r\n    <div className=\"task-list-menu\">\r\n      <div className=\"new-task\">\r\n        <TaskDialog type=\"newTask\" />\r\n      </div>\r\n      <div className=\"sort\" onClick={() => changeSortMethod(selectedSortIndex)}>\r\n        {translatedSortBy + \" \"}\r\n\r\n        <SortIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = ({ tasks: { allTasks }, auth }) => ({\r\n  allTasks,\r\n  auth,\r\n});\r\nexport default connect(mapDispatchToProps, { fetchTasks })(TaskListMenu);\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport TaskItem from \"../../components/task-list-components/task-item/TaskItem.component\";\r\nimport TaskListMenu from \"../../components/task-list-components/task-list-menu/TaskListMenu.component\";\r\nimport { fetchTasks } from \"../../redux/tasks/tasks.actions\";\r\nimport \"./TaskList.styles.scss\";\r\n\r\nconst TaskList = ({ tasks, loadingTasks }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Aufgaben | TaskApp</title>\r\n      </Helmet>\r\n      <div className=\"task-list\">\r\n        <h3 className=\"task-list-header\">Offene Aufgaben</h3>\r\n        <TaskListMenu />\r\n\r\n        <div className=\"task-wrapper\">\r\n          {tasks.length ? (\r\n            tasks.map(({ taskName, notes, dueDate, importance, _id }) => (\r\n              <TaskItem\r\n                key={_id}\r\n                id={_id}\r\n                taskName={taskName}\r\n                notes={notes}\r\n                dueDate={dueDate}\r\n                importance={importance}\r\n              />\r\n            ))\r\n          ) : !loadingTasks ? (\r\n            <h4 className=\"no-pending-tasks\">\r\n              Du hast keine ausstehenden Aufgaben\r\n            </h4>\r\n          ) : (\r\n            <MoonLoader size={80} color={\"#fff\"} loading={loadingTasks} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ tasks: { allTasks, loading } }) => ({\r\n  tasks: allTasks,\r\n  loadingTasks: loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchTasks })(TaskList);\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import {\r\n  GET_TASKS,\r\n  TASK_ERROR,\r\n  CREATE_TASK,\r\n  UPDATE_TASK,\r\n  SORT_TASKS,\r\n  DELETE_TASK\r\n} from './tasks.types';\r\n\r\nconst initialState = { allTasks: [], loading: true };\r\n\r\nexport const tasksReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_TASKS:\r\n    case SORT_TASKS:\r\n      return {\r\n        ...state,\r\n        allTasks: payload,\r\n        loading: false\r\n      };\r\n    case CREATE_TASK:\r\n      return {\r\n        ...state,\r\n        allTasks: [payload, ...state.allTasks],\r\n        loading: false\r\n      };\r\n    case UPDATE_TASK:\r\n      return {\r\n        ...state,\r\n        allTasks: state.allTasks.map(task =>\r\n          task._id === payload._id ? { ...payload } : task\r\n        ),\r\n        loading: false\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        allTasks: state.allTasks.filter(({ _id }) => _id !== payload),\r\n        loading: false\r\n      };\r\n    case TASK_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT\r\n} from './auth.types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  const { payload, type } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_ALERT, REMOVE_ALERT } from './alert.types';\r\n\r\nconst initialState = [];\r\nexport const alertReducer = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter(alert => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { tasksReducer } from \"./tasks/tasks.reducer\";\r\nimport { authReducer } from \"./auth/auth.reducer\";\r\nimport { alertReducer } from \"./alert/alert.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  tasks: tasksReducer,\r\n  auth: authReducer,\r\n  alert: alertReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(...middlewares))\r\n);\r\n\r\nlet currentState = {\r\n  auth: { token: null, isAuthenticated: null, loading: true, user: null },\r\n};\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\n//redux\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Alert from \"./components/alert/Alert.component\";\r\nimport PrivateRoute from \"./components/HOCs/PrivateRoute\";\r\n// pages\r\nimport Navbar from \"./components/navbar/Navbar.component\";\r\nimport Landing from \"./pages/landing/Landing.component\";\r\nimport Login from \"./pages/login/Login.component\";\r\nimport Register from \"./pages/register/Register.component\";\r\nimport Settings from \"./pages/settings/Settings.component\";\r\nimport TaskList from \"./pages/task-list/TaskList.component\";\r\nimport { loadUser } from \"./redux/auth/auth.actions\";\r\nimport store from \"./redux/store\";\r\n//utils\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\n\r\n//set base url\r\naxios.defaults.baseURL = \"https://semoto-api.herokuapp.com/\";\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    setAuthToken(localStorage.token);\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <Alert />\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <PrivateRoute exact path=\"/settings\" component={Settings} />\r\n            <PrivateRoute exact path=\"/tasks\" component={TaskList} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}